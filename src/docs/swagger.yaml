swagger: '2.0'

schemes:
  - http
  
host: localhost:3333
basePath: /

info:
  version: 1.0.0
  title: Inventario Api
  description: Administra o processo de inventariado de departamentos.
  termsOfService: http://localhost:3333/terms
  contact:
    name: Suporte
    url: http://localhost:3333/suporte
    email: suporte@gsw.com.br
    
securityDefinitions:
  bearerAuth:
    type: oauth2
    flow: implicit
    authorizationUrl: http://localhost:3333/auth
    
produces:
  - application/json

tags:
  - name: Authentication
  - name: User
  - name: Item
  - name: Department
  - name: Inventory
  - name: ItemInventory

paths:
  '/item':
    post:
      tags:
        - Item
      summary: Cadastra item
      description: Cadastra um item na base de dados
      consumes:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: item_
          schema:
            type: object
            properties:
              name:
                type: string
                example: Cadeira01
              department_id:
                $ref: '#/definitions/Department/properties/id'
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Item'
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor

  '/item/{itemId}':
    get:
      tags:
        - Item
      summary: Busca item por id
      description: Retorna um item através do id informado
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: itemId
          type: integer
          format: int32
          required: true

      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 1
              name:
                type: string
                example: Cadeira01
              department_id:
                $ref: '#/definitions/Department/properties/id'
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor

    put:
      tags:
        - Item
      summary: Atualiza item
      description: Atualiza o item informado pelo id
      consumes:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: itemId
          type: integer
          format: int32
          required: true
        - in: body
          name: item_
          schema:
            type: object
            properties:
              name:
                type: string
                example: Cadeira01
              department_id:
                $ref: '#/definitions/Department/properties/id'
      responses:
        200:
          description: Item atualizado com sucesso
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 1
              name:
                type: string
                example: Cadeira01
              department_id:
                $ref: '#/definitions/Department/properties/id'
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor

    delete:
      tags:
        - Item
      summary: Apaga item
      description: Apaga o item informado pelo id
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: itemId
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: Item excluído
          schema:
            type: object
            properties:
              message:
                type: string
                example: Item excluído
              name:
                type: string
                example: Cadeira01
              department_id:
                $ref: '#/definitions/Department/properties/id'
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor

  '/department':
    post:
      tags:
        - Department
      summary: Cadastra departamento
      description: Cadastra um departamento na base de dados
      consumes:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: department_
          schema:
            type: object
            properties:
              name:
                type: string
                example: RH
      responses:
        201:
          description: Created
          schema:
            $ref: '#/definitions/Department'
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor

  '/department/{departmentId}':
    get:
      tags:
        - Department
      summary: Busca departamento por id
      description: Retorna um departamento através do id informado
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: departmentId
          type: integer
          format: int32
          required: true

      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 1
              name:
                type: string
                example: RH
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor

    put:
      tags:
        - Department
      summary: Atualiza departamento
      description: Atualiza o departamento informado pelo id
      consumes:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: departmentId
          type: integer
          format: int32
          required: true
        - in: body
          name: department_
          schema:
            type: object
            properties:
              name:
                type: string
                example: RH
      responses:
        200:
          description: Departamento atualizado com sucesso
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int32
                example: 1
              name:
                type: string
                example: RH
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor

    delete:
      tags:
        - Department
      summary: Apaga departamento
      description: Apaga o departamento informado pelo id
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: departmentId
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: Departamento excluído
          schema:
            type: object
            properties:
              message:
                type: string
                example: Departamento excluído
              name:
                type: string
                example: RH
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor

  '/users':
      get:
        tags:
          - User
        summary: Lista todos os usuários
        responses:
          200:
            description: Success
            schema:
              $ref: "#/definitions/User"
      post:
        tags:
          - User
        summary: Adiciona um novo usuário
        consumes:
          - application/json
        parameters:
          - in: body
            name: user
            description: O usuário a ser criado
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
        responses:
          201:
            description: Created
            schema:
              $ref: "#/definitions/User"
          400:
            description: Erro de cadastro
          409:
            description: Email já existe
      put:
        tags:
          - User
        security:
        - bearerAuth: []
        summary: Atualiza os dados do usuário logado
        consumes:
          - application/json
        parameters:
          - in: header
            name: Authorization
            type: string
            required: true
          - in: body
            name: user
            description: O usuário a atualizar
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                oldPassword:
                  type: string
                  description: Obrigatorio apenas se 'password' for informado
                password:
                  type: string
                  description: Nova senha
                confirmPassword:
                  type: string
                  description: Nova senha. Obrigatório apenas se 'password' for informado
        responses:
          200:
            description: Success
            schema:
              $ref: "#/definitions/User"
          400:
            description: Erro de validação
          409:
            description: Email já cadastrado
      delete:
        tags:
        - User
        security:
        - bearerAuth: []
        parameters:
          - in: header
            name: Authorization
            type: string
            required: true
        summary: Altera o status do usuário logado para inativo
        responses:
          204:
            description: Success

  '/inventory':
    get:
        tags:
          - Inventory
        summary: Retorna inventários
        description: Retorna todos os inventários da base de dados
        consumes:
          - application/json
        operationId: indexInventories
        security:
          - bearerAuth: []
        parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        responses:
          200:
            description: Success
            schema:
              $ref: "#/definitions/Inventory"
    post:
      tags:
        - Inventory
      summary: Cadastra inventário
      description: Cadastra um inventário na base de dados
      consumes:
        - application/json
      operationId: storeInventory
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: Inventory
          schema:
            type: object
            properties:
              name:
                type: string
                example: Nome Departamento
              description:
                type: string
                example: Descricao0001
              department_id:
                $ref: '#/definitions/Department/properties/id'
      responses:
        201:
          description: Created
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: Nome Departamento
        400:
          description: Erro de validação
        500:
          description: Erro interno no servidor

  '/inventory/{inventoryId}':
    get:
      tags:
        - Inventory
      summary: Busca inventário por id
      description: Retorna um inventário através do id informado
      operationId: findByIdInventory
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: inventoryId
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: Nome Departamento
              description:
                type: string
                example: Decricao0001
              end_date:
                type: string
                example: null
              Items: 
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Cadeira01
                    
    put:
      tags:
        - Inventory
      summary: Atualiza inventário
      description: Atualiza o inventário informado pelo id
      consumes:
        - application/json
      operationId: updateInventory
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: inventoryId
          type: integer
          format: int32
          required: true
        - in: body
          name: Inventory
          schema:
            type: object
            properties:
              name:
                type: string
                example: Cadeira01
              description:
                type: string
                example: Descricao0001
              end_date:
                type: string
                example: '2020-05-20T22:36:30'
              department_id:
                $ref: '#/definitions/Department/properties/id'
      responses:
        200:
          description: Inventário atualizado com sucesso
          schema:
            type: object
            properties:
              name:
                type: string
                example: Nome Departamento
              description:
                type: string
                example: Decricao0001
              end_date:
                type: string
                example: '2020-05-20T22:36:30'
        400:
          description: Requisição inválida
  
    delete:
      tags:
        - Inventory
      summary: Apaga inventário
      description: Apaga o inventário pelo id informado
      operationId: deleteInventory
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: inventoryId
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: Inventário excluído
          schema:
            type: object
            properties:
              id:
                type: integer
                example: 1
              name:
                type: string
                example: Nome Inventario
        400:
          description: Erro ao deletar inventário
          schema:
            type: object
            properties:
              error:
                type: string
                example: Erro ao deletar inventário
        401:
          description: Não é possível apagar um inventário que contenha item
          schema:
            type: object
            properties:
              error:
                type: string
                example: Não é possível apagar um inventário que contenha item
                
  '/iteminventory':
    post:
      tags:
        - ItemInventory
      summary: Insere item em inventário
      description: Insere um item em um inventário utilizando os ids de item e inventário
      consumes:
        - application/json
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: body
          name: item_
          schema:
              type: object
              properties:
                inventory_id:
                  $ref: '#/definitions/Inventory/properties/id'
                item_id:
                  $ref: '#/definitions/Item/properties/id'
      responses:
        201:
          description: Item inserido no inventário com sucesso
          schema:
            type: object
            properties:
              itemInventory:
                $ref: '#/definitions/ItemInventory'
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor
  
  '/iteminventory/{itemId}':
    delete:
      tags:
        - ItemInventory
      summary: Apaga um item de um inventário
      description: Apaga o item do inventário através da referência do item.
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          type: string
          required: true
        - in: path
          name: itemId
          type: integer
          format: int32
          required: true
      responses:
        200:
          description: Item excluído
          schema:
            type: object
            properties:
              itemOnInventory:
                $ref: '#/definitions/Item'
        400:
          description: Requisição inválida
        401:
          description: Requisição não autorizada
        500:
          description: Erro interno no servidor

  '/auth':
    post:
      tags:
        - Authentication
      summary: Autenticação de usuário
      description: Autentica o usuário e gera um token
      consumes:
        - application/json
      parameters:
        - in: body
          name: authentication_
          schema:
              type: object
              properties:
                email:
                  type: string
                  example: usuario@email.com
                password:
                  type: string
                  example: senha123
      responses:
        201:
          description: Item inserido no inventário com sucesso
          schema:
            type: object
            properties:
              id:
                $ref: '#/definitions/User/properties/id'
              email:
                type: string
                example: usuario@email.com
              token:
                type: string
                example: sahf%$#gdskGgdj%kdkdsd.apdoerclsclkahskb.%&8llfsdk*nsl*
        401:
          description: Usuário não encontrado ou senha inválida
        500:
          description: Erro interno no servidor

definitions:
  User:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Usuário 01
        email:
          type: string
          example: usuario@email.com
        active:
          type: boolean
          example: true
          
  Item:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      name:
        type: string
        example: Cadeira01
      department_id:
        $ref: '#/definitions/Department/properties/id'
        
  Department:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 2
      name:
        type: string
        example: RH
        
  Inventory:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 1
      name:
        type: string
        example: Departamento
      end_date:
        type: string
        example: null
      department_id:
        $ref: '#/definitions/Department/properties/id'
        
  ItemInventory:
    type: object
    properties:
      id:
        type: integer
        format: int32
        example: 5
      inventory_id:
        $ref: '#/definitions/Inventory/properties/id'
      item_id:
        $ref: '#/definitions/Item/properties/id'
      user_id:
        $ref: '#/definitions/User/properties/id'
      item_found_on_system:
        type: boolean
        example: true
      surplus:
        type: boolean
        example: false
